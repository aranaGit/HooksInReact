{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","flag","setFlag","step","setSteps","names","setNames","className","onClick","prevState","onSubmit","e","preventDefault","id","length","type","placeholder","value","onChange","target","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAuDeA,MApDf,WACE,MAAyBC,mBAAS,SAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyBF,oBAAS,GAAlC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAmBA,OACE,qCACE,sBAAKC,UAAU,MAAf,UACE,wCAAWN,EAAOF,EAAO,GAAzB,OACA,wBAAQS,QArBd,WACER,EAAQ,QACRE,GAASD,IAmBL,yBAEF,uBACA,wBAAQO,QApBZ,WACEJ,GAAS,SAACK,GAAD,OAAeA,EAAU,KAClCL,GAAS,SAACK,GAAD,OAAeA,EAAU,MAkBhC,eACCN,EACD,wBAAQK,QAlBZ,WACEJ,EAASD,EAAK,IAiBZ,eACA,uBACA,uBAAMO,SAhBV,SAAkBC,GAChBA,EAAEC,iBACFN,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACQ,GAAGR,EAAMS,OAAQf,WACtCC,EAAQ,KAaN,UACE,uBACEe,KAAK,QACLC,YAAY,UACZC,MAAOlB,EACPmB,SAAU,SAACP,GAAD,OAAKX,EAAQW,EAAEQ,OAAOF,UAElC,+CAEF,uBACA,6BACGZ,EAAMe,KAAI,SAACC,GAAD,OACX,6BAAmBA,EAAKtB,MAAfsB,EAAKR,aCrCPS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c16edeee.chunk.js","sourcesContent":["import { useState } from \"react\";\n\n\nfunction App() {\n  const [name, setName]  = useState(\"Ashok\");\n  const [flag, setFlag]  = useState(false);\n  const [step, setSteps]  = useState(0);\n  const [names, setNames]=  useState([]);\n\n  function changeName() {\n    setName(\"Rana\");\n    setFlag(!flag);\n  }\n  function increment() {\n    setSteps((prevState) => prevState+1);\n    setSteps((prevState) => prevState+1);\n  }\n  function decreament() {\n    setSteps(step-1);\n  }\n\n  function addNames(e) {\n    e.preventDefault();\n    setNames([...names, {id:names.length, name}]);\n    setName(\"\");\n  }\n  return (\n    <>\n      <div className=\"App\">\n        <h>hello, {flag ? name : \"\"} </h>\n        <button onClick={changeName}>Click Me</button>\n      </div>\n      <hr></hr>\n      <button onClick={increment}>+</button>\n      {step}\n      <button onClick={decreament}>-</button>\n      <hr></hr>\n      <form onSubmit={addNames}>\n        <input\n          type=\"input\"\n          placeholder=\"default\"\n          value={name}\n          onChange={(e)=>setName(e.target.value)}>\n        </input>\n        <button>Submit</button>\n      </form>\n      <hr></hr>\n      <ul>\n        {names.map((item)=>(\n        <li key={item.id}>{item.name}</li>))}\n      </ul>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}